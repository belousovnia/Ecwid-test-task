{"version":3,"sources":["components/Head.js","components/DropZone.js","components/PhotoBoard.js","components/context.js","components/ImageTile.js","components/Line.js","components/icon-trash.png","components/ModalWindow.js","App.js","reportWebVitals.js","index.js"],"names":["Head","props","className","type","id","onClick","addNewImages","document","getElementById","value","DropZone","useDropzone","onDrop","acceptedFiles","map","file","URL","createObjectURL","accept","getRootProps","getInputProps","onDragLeave","style","zIndex","height","width","PhotoBoard","onDragOver","countLine","parsNewImages","setCountReaction","countReaction","Context","React","createContext","ImageTile","openImage","useContext","src","imagesParms","Line","line","i","deleteImages","getRandomInt","ModalWindow","display","changeModalImg","iconTrash","idImage","App","MyImages","this","ratio","newHeight","newWidth","countNewId","useRef","current","requstJSON","urlJSON","getImages","XMLHttpRequest","open","send","JSON","parse","response","JSONImagesPars","JSONImages","arrayImage","key","URLimage","push","useState","count","setCount","URLImage","a","Image","addEventListener","newMyImage","newImage","buildingImagesTile","countWidth","alert","initionImages","useEffect","setCountLine","setCountWidth","arrMyImages","cWidth","dataImages","fullWidth","clientWidth","lineImages","steckImages","lineWidth","startWidth","checkPadding","length","changeHidth","changesWidth","extraImages","pop","sumRatio","additionFactor","checkWidth","changeWidth","lineConstructor","idDelete","countCopyDelete","splice","urlNewImages","optionAdd","console","log","window","countModal","setCountModal","countIdImage","setCountIdImage","Provider","urlImageOpen","newModalImg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mMAEO,SAASA,EAAKC,GACnB,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UAEE,uBACEC,KAAK,OACLD,UAAU,WACVE,GAAG,aAIL,wBACEF,UAAU,iBACVG,QAAS,kBAAMJ,EAAMK,aACnBC,SAASC,eAAe,YAAYC,MACpCF,SAASC,eAAe,UAAUC,QAJtC,oEAWA,yBAAQL,GAAG,SAAX,UACE,wBAAQK,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,uBAtB4B,SADR,Q,mBCDvB,SAASC,EAAST,GAEvB,IAMA,EAGIU,YAAY,CACdC,OAVa,SAAAC,GACbA,EAAcC,KAAI,SAAAC,GAChBd,EAAMK,aAAaU,IAAIC,gBAAgBF,GAAO,OAShDG,OAAQ,0BAJRC,EADF,EACEA,aACAC,EAFF,EAEEA,cAMF,OACE,+CAASD,KAAT,IACEjB,UAAU,WACVE,GAAG,WACHiB,YAAa,WACXd,SAASC,eAAe,YAAYc,MAAMC,OAAS,KACnDhB,SAASC,eAAe,YAAYc,MAAME,OAAS,QACnDjB,SAASC,eAAe,YAAYc,MAAMG,MAAQ,SANtD,SASE,qCAAWL,SC1BV,SAASM,EAAWzB,GAEzB,OACE,sBACEC,UAAU,aACVE,GAAG,aACHuB,WAAY,WACVpB,SAASC,eAAe,YAAYc,MAAMC,OAAS,IACnDhB,SAASC,eAAe,YAAYc,MAAME,OAAS,OACnDjB,SAASC,eAAe,YAAYc,MAAMG,MAAQ,QAGpDb,OAAQ,WACNL,SAASC,eAAe,YAAYc,MAAMC,OAAS,KACnDhB,SAASC,eAAe,YAAYc,MAAME,OAAS,QACnDjB,SAASC,eAAe,YAAYc,MAAMG,MAAQ,SAZtD,UAgBGxB,EAAM2B,UAEP,cAAClB,EAAD,CACEmB,cAAiB5B,EAAM4B,cACvBvB,aAAgBL,EAAMK,aACtBwB,iBAAoB7B,EAAM6B,iBAC1BC,cAAiB9B,EAAM8B,mBC1BxB,IAAMC,EAAUC,IAAMC,gBCEtB,SAASC,EAAUlC,GACxB,IAAMmC,EAAYC,qBAAWL,GAE7B,OACE,qBACE9B,UAAU,WADZ,SAGE,qBACEA,UAAU,QACVoC,IAAKrC,EAAMsC,YAAYD,IACvBd,OAAQvB,EAAMsC,YAAYf,OAC1BC,MAAOxB,EAAMsC,YAAYd,MACzBpB,QAAS,kBAAM+B,EAAUnC,EAAMsC,YAAYD,IAAKrC,EAAMsC,YAAYnC,SCbnE,SAASoC,EAAKvC,GACnB,OACE,qBAAKC,UAAU,OAAOE,GAAG,MAAzB,SACGH,EAAMwC,KAAK3B,KAAK,SAAA4B,GAAC,OAChB,cAACP,EAAD,CACEI,YAAaG,EACbC,aAAc1C,EAAM0C,cACf1C,EAAM2C,oBALkB,QCLxB,UAA0B,uCCGlC,SAASC,EAAY5C,GAE1B,OACE,qBACEC,UAAU,cACVE,GAAG,cACHC,QAAS,WACPE,SAASC,eAAe,eAAec,MAAMwB,QAAU,OACvD7C,EAAM8C,eAAe,KALzB,SAQE,sBAAK7C,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAaoC,IAAKrC,EAAMqC,MACvC,qBACEA,IAAKU,EACL9C,UAAU,YACVG,QAAS,WAAOJ,EAAM0C,aAAa1C,EAAMgD,iBCmRpCC,MA/Rf,WAAgB,IAERC,EAFO,WAGX,WAAYb,EAAKd,EAAQC,EAAOrB,GAAI,oBAClCgD,KAAKd,IAAMA,EACXc,KAAKC,MAAQ5B,EAAQD,EACrB4B,KAAK5B,OAASA,EACd4B,KAAK3B,MAAQA,EACb2B,KAAKhD,GAAKA,EARD,+CAWX,SAAYkD,GACVF,KAAK5B,OAAS8B,EACdF,KAAK3B,MAAQ6B,EAAYF,KAAKC,QAbrB,yBAgBX,SAAaE,GACXH,KAAK3B,MAAQ8B,EACbH,KAAK5B,OAAS+B,EAAWH,KAAKC,UAlBrB,KAwBPG,EAAaC,iBAAO,GAE1B,SAASb,IAEP,OADAY,EAAWE,UACJF,EAAWE,QAMpB,SAASC,EAAWC,GAClB,IAAMC,EAAY,IAAIC,eAGtB,OAFAD,EAAUE,KAAK,MAAOH,GAAS,GAC/BC,EAAUG,OACHC,KAAKC,MAAML,EAAUM,UAO9B,SAASC,EAAeC,GAEtB,IAAIC,EAAa,GAEjB,IAAK,IAAMC,KAAOF,EAAY,CAC5B,IAAIG,EAAWH,EAAWE,GAC1BD,EAAWG,KAAKD,EAAQ,KAG1B,OAAOF,EAMT,MAA0BI,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,SAAS/C,EAAcgD,GAAU,IAAD,WAEnBnC,GACT,IAAIoC,EAAI,IAAIC,MACZD,EAAExC,IAAMuC,EAASnC,GACjBoC,EAAEE,iBAAiB,QAAQ,WACzB,IAAIC,EAAa,IAAI9B,EACnB2B,EAAExC,IACFwC,EAAEtD,OACFsD,EAAErD,MACFmB,KAGEsC,EAAWP,EACfO,EAAST,KAAKQ,GACdL,EAASM,GAETC,EAAmBR,EAAOS,MAE5BN,EAAEE,iBAAiB,SAAS,WAC1BK,MAAM,oYAlBV,IAAK,IAAM3C,KAAKmC,EAAU,EAAfnC,GAwGb,IACM4C,EAAgBlB,EAAeT,EADd,+EACc,eACrC4B,qBAAU,kBAAM1D,EAAcyD,KAAgB,IAI9C,MAA0CZ,mBAAS,GAAnD,mBACA,GADA,UACkCA,mBAAS,KAA3C,mBAAO9C,EAAP,KAAkB4D,EAAlB,KACA,EAAoCd,mBAAS,GAA7C,mBAAOU,EAAP,KAAmBK,EAAnB,KAEA,SAASN,EAAmBO,EAAaC,GACvCH,EAtFF,SAAyBI,EAAYC,GAEjB,IAAdA,IACFA,EAAYtF,SAASC,eAAe,cAAcsF,aAGpD,IAAIC,EAAa,GACbC,EAAc,GACdC,EAAY,EACZC,EAAa,IACbC,EAAe,EAEfN,EAAY,MACdK,EAAa,KAGf,IAAK,IAAIxD,EAAE,EAAGA,EAAIkD,EAAWQ,OAAQ1D,IAAI,CACvCkD,EAAWlD,GAAG2D,YAAYH,GAC1BF,EAAYvB,KAAKmB,EAAWlD,IAC5BuD,EAAY,EAGZ,IAAK,IAAIvD,EAAE,EAAGA,EAAEsD,EAAYI,OAAQ1D,IAClCuD,GAAaD,EAAYtD,GAAGjB,MAC5B0E,GAAgB,EAGlB,GAAIF,EAAyB,GAAbE,GAAmBN,EAAU,CAE3CM,EAAe,EAQf,IANA,IAAMG,EAAeT,GACnBI,EAAYD,EAAYA,EAAYI,OAAS,GAAG3E,OAE9C8E,EAAcP,EAAYQ,MAC1BC,EAAW,EAEN/D,EAAE,EAAGA,EAAIsD,EAAYI,OAAQ1D,IACpC+D,GAAYT,EAAYtD,GAAGW,MAS7B,IANA,IAAIqD,GAAkBJ,EACM,IAA1BN,EAAYI,OAAS,IAAYK,EAE/BE,EAAaD,EAAiBV,EAAYI,OACtB,GAArBJ,EAAYI,OAAc,GAEtBO,EAAad,GAClBa,GAAkB,GAGpB,IAAK,IAAIhE,EAAE,EAAGA,EAAIsD,EAAYI,OAAQ1D,IACpCsD,EAAYtD,GAAG2D,YAAYH,EAAaQ,EAAiB,IAG3DX,EAAWtB,KAAKuB,GAChBA,EAAc,CAACO,GAGb7D,IAAMkD,EAAWQ,OAAS,IACD,IAAvBJ,EAAYI,QACVJ,EAAY,GAAGvE,MAAQoE,EAAY,IACrCG,EAAY,GAAGY,YAAaf,EAAY,IAG5CE,EAAWtB,KAAKuB,IAIpB,OAAOD,EAiBMc,CAAgBnB,EAAaC,GAAQ7E,KAAI,SAAC4B,GAAD,OACtD,cAACF,EAAD,CACEC,KAAMC,EACNC,aAAcA,EAEdC,aAAcA,GADTA,SAkBT,SAASD,EAAamE,GAEpB,IADA,IAAIC,EAAkBpC,EACbjC,EAAE,EAAGA,EAAIqE,EAAgBX,OAAQ1D,IACxC,GAAIqE,EAAgBrE,GAAGtC,KAAO0G,EAAS,CACrCC,EAAgBC,OAAOtE,EAAG,GAC1BkC,EAASmC,GACT5B,EAAmBR,EAAOS,GAC1B,OAUN,SAAS9E,EAAa2G,EAAcC,GAIlC,GAHAC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZC,QAAQC,IAAI,QACK,GAAbF,EACFC,QAAQC,IAAI,KACZvF,EAAc,CAACoF,SACX,GAAiB,GAAbC,EAAe,CACvBC,QAAQC,IAAI,KACZ,IAGAvF,EADqBuC,EADDT,EAAWsD,GACc,gBAE3C,SACA5B,MAAM,mWAKV9E,SAASC,eAAe,YAAYC,MAAQ,GAjD9C8E,qBAAU,WACRE,EAAclF,SAASC,eAAe,cAAcsF,aACpDX,EAAmBR,EAAOS,KACzB,CAACA,IAMJiC,OAAOrC,iBAAiB,UAJxB,WACES,EAAclF,SAASC,eAAe,cAAcsF,gBA8CtDqB,QAAQC,IAAIzC,GAKZ,MAAoCD,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmBC,EAAnB,KACA,EAAwC7C,qBAAxC,mBAAO8C,EAAP,KAAqBC,EAArB,KAgBA,OACA,eAACzF,EAAQ0F,SAAT,CAAkBjH,MAdlB,SAAmBkH,EAAc1E,GAC/BsE,EAAcI,GACdF,EAAgBxE,GAChB1C,SAASC,eAAe,eAAec,MAAMwB,QAAU,SAWzD,UAGE,cAAC9C,EAAD,CACEM,aAAcA,IAEhB,qBAAKJ,UAAU,OAAOE,GAAG,OAAzB,SACE,cAACsB,EAAD,CACEE,UAAaA,EACbC,cAAiBA,EACjBvB,aAAgBA,MAGpB,cAACuC,EAAD,CACEP,IAAKgF,EACLC,cAAeA,EACf5E,aAAcA,EACdM,QAASuE,EACTzE,eAzBJ,SAAwB6E,GACtBL,EAAcK,UC5PHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjI,SAASC,eAAe,SAM1BqH,M","file":"static/js/main.0f02168d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Head(props){\r\n  return (\r\n    <div className='head' key='2011'>\r\n      <div className='headBlock1' key='1012'>\r\n\r\n        <input \r\n          type=\"text\" \r\n          className='inputURL' \r\n          id='inputURL'\r\n        />\r\n        \r\n\r\n        <button \r\n          className='battonDownload' \r\n          onClick={() => props.addNewImages(\r\n            document.getElementById('inputURL').value,\r\n            document.getElementById('option').value\r\n            )\r\n          }\r\n        >\r\n          Загрузить\r\n        </button>\r\n\r\n        <select id='option'>\r\n          <option value=\"1\">Image</option>\r\n          <option value=\"2\">JSON</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nexport function DropZone(props) {\r\n\r\n  const onDrop = acceptedFiles => {\r\n    acceptedFiles.map(file => {\r\n      props.addNewImages(URL.createObjectURL(file), 1);\r\n    })\r\n  };\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps\r\n  } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/jpeg, image/png'\r\n  });\r\n\r\n  return (\r\n    <div {...getRootProps()} \r\n      className='dropZone' \r\n      id='dropZone'\r\n      onDragLeave={() => {\r\n        document.getElementById('dropZone').style.zIndex = '-1';\r\n        document.getElementById('dropZone').style.height = '0.1px';\r\n        document.getElementById('dropZone').style.width = '0.1px';\r\n      }}\r\n    >\r\n      <input {...getInputProps()} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { DropZone } from './DropZone';\r\n\r\nexport function PhotoBoard(props){\r\n\r\n  return (\r\n    <div \r\n      className='photoBoard' \r\n      id='photoBoard'\r\n      onDragOver={() => {\r\n        document.getElementById('dropZone').style.zIndex = '2';\r\n        document.getElementById('dropZone').style.height = '100%';\r\n        document.getElementById('dropZone').style.width = '100%';\r\n      }}\r\n      \r\n      onDrop={() => {\r\n        document.getElementById('dropZone').style.zIndex = '-1';\r\n        document.getElementById('dropZone').style.height = '0.1px';\r\n        document.getElementById('dropZone').style.width = '0.1px';\r\n      }}\r\n    >\r\n      \r\n      {props.countLine}\r\n\r\n      <DropZone \r\n        parsNewImages = {props.parsNewImages}\r\n        addNewImages = {props.addNewImages}\r\n        setCountReaction = {props.setCountReaction}\r\n        countReaction = {props.countReaction}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const Context = React.createContext()","import React, {useContext} from 'react';\r\nimport { Context } from './context';\r\n\r\n\r\nexport function ImageTile(props){\r\n  const openImage = useContext(Context);\r\n\r\n  return (\r\n    <div \r\n      className='imageBox'\r\n    >\r\n      <img \r\n        className='image' \r\n        src={props.imagesParms.src} \r\n        height={props.imagesParms.height} \r\n        width={props.imagesParms.width}\r\n        onClick={() => openImage(props.imagesParms.src, props.imagesParms.id)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ImageTile } from './ImageTile';\r\n\r\nexport function Line(props){\r\n  return (\r\n    <div className='line' id='qwe' key='2009'>\r\n      {props.line.map( i => \r\n        <ImageTile \r\n          imagesParms={i}\r\n          deleteImages={props.deleteImages}\r\n          key={props.getRandomInt()}\r\n        />)}\r\n    </div>\r\n  );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/icon-trash.11387444.png\";","import React from 'react';\r\nimport iconTrash from './icon-trash.png'\r\n\r\nexport function ModalWindow(props){\r\n\r\n  return (\r\n    <div\r\n      className='modalWindow'\r\n      id='modalWindow'\r\n      onClick={() => {\r\n        document.getElementById('modalWindow').style.display = 'none';\r\n        props.changeModalImg('');\r\n      }}\r\n    >\r\n      <div className='modalContainer'>\r\n        <img className='modalImage' src={props.src}/>\r\n        <img \r\n          src={iconTrash} \r\n          className='iconTrash'\r\n          onClick={() => {props.deleteImages(props.idImage)}} \r\n        /> \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef} from 'react';\r\nimport { Head } from './components/Head';\r\nimport { PhotoBoard } from './components/PhotoBoard';\r\nimport { Line } from './components/Line';\r\nimport { ModalWindow } from './components/ModalWindow';\r\nimport { Context } from './components/context';\r\n\r\nfunction App() {\r\n\r\n  class MyImages {\r\n    constructor(src, height, width, id){\r\n      this.src = src;\r\n      this.ratio = width / height;\r\n      this.height = height;\r\n      this.width = width;\r\n      this.id = id;\r\n    }\r\n\r\n    changeHidth(newHeight){\r\n      this.height = newHeight;\r\n      this.width = newHeight * this.ratio;\r\n    }\r\n\r\n    changeWidth (newWidth){\r\n      this.width = newWidth;\r\n      this.height = newWidth / this.ratio;\r\n    }\r\n  };\r\n\r\n//-------------------------------------------------------------------------------------\r\n  // Генератор нового id.\r\n  const countNewId = useRef(0)\r\n\r\n  function getRandomInt() {\r\n    countNewId.current++\r\n    return countNewId.current\r\n  };\r\n\r\n//-----------------------------------------------------------------------------\r\n  //  Принимает ссылку на JSON с фотографиями и возвращает его.\r\n\r\n  function requstJSON(urlJSON){\r\n    const getImages = new XMLHttpRequest();\r\n    getImages.open('GET', urlJSON, false);\r\n    getImages.send();\r\n    return JSON.parse(getImages.response)\r\n  };\r\n  \r\n// ----------------------------------------------------------------------------\r\n  //  Принимает JSON с данными о изображениях. Возвращает массив \r\n  // с адресами изображений. \r\n\r\n  function JSONImagesPars(JSONImages) {\r\n    \r\n    let arrayImage = [];\r\n\r\n    for (const key in JSONImages) {\r\n      let URLimage = JSONImages[key]; \r\n      arrayImage.push(URLimage['url']); \r\n    };\r\n\r\n    return arrayImage\r\n  };\r\n\r\n//---------------------------------------------------------------------------------------\r\n  //  Принимает массив ссылок на изображения. Добавляет изображения на сайт.\r\n\r\n  const [count, setCount] = useState([]);\r\n\r\n  function parsNewImages(URLImage){\r\n   \r\n    for (const i in URLImage){\r\n      let a = new Image();\r\n      a.src = URLImage[i];\r\n      a.addEventListener(\"load\", () => {\r\n        let newMyImage = new MyImages(\r\n          a.src,\r\n          a.height,\r\n          a.width,\r\n          getRandomInt()\r\n        );\r\n\r\n        let newImage = count;\r\n        newImage.push(newMyImage);\r\n        setCount(newImage);\r\n        \r\n        buildingImagesTile(count, countWidth);\r\n      });\r\n      a.addEventListener(\"error\", () => {\r\n        alert('Произошла ошибка при загрузки изображения, пожалуйста проверьте ссылку');\r\n      });\r\n\r\n    };\r\n  };\r\n\r\n  \r\n// --------------------------------------------------------------------------------------\r\n  //  Принимает массив с объектами MyImages и строит на их основе линии с \r\n  // изображениями, возвращаемые в массиве.  \r\n\r\n  function lineConstructor(dataImages, fullWidth) {\r\n\r\n    if (fullWidth === 0){\r\n      fullWidth = document.getElementById('photoBoard').clientWidth;\r\n    };\r\n\r\n    let lineImages = [];\r\n    let steckImages = [];\r\n    let lineWidth = 0;\r\n    let startWidth = 200;\r\n    let checkPadding = 1;\r\n\r\n    if (fullWidth < 800){\r\n      startWidth = 150;\r\n    };\r\n      \r\n    for (let i=0; i < dataImages.length; i++){\r\n      dataImages[i].changeHidth(startWidth);\r\n      steckImages.push(dataImages[i]);\r\n      lineWidth = 0;\r\n      \r\n        \r\n      for (let i=0; i<steckImages.length; i++){\r\n        lineWidth += steckImages[i].width;\r\n        checkPadding += 1;\r\n      };\r\n\r\n      if (lineWidth + checkPadding*10 >= fullWidth){\r\n\r\n        checkPadding = 1;\r\n        \r\n        const changesWidth = fullWidth - (\r\n          lineWidth - steckImages[steckImages.length - 1].width);\r\n\r\n        let extraImages = steckImages.pop();\r\n        let sumRatio = 0;\r\n\r\n        for (let i=0; i < steckImages.length; i++){\r\n          sumRatio += steckImages[i].ratio;\r\n        };\r\n\r\n        let additionFactor = (changesWidth - (\r\n          steckImages.length + 1) * 10)  / sumRatio;\r\n\r\n        let checkWidth = additionFactor * steckImages.length\r\n         + steckImages.length * 10 + 10;\r\n\r\n        while (checkWidth > fullWidth){\r\n          additionFactor -= 0.5;\r\n        };\r\n\r\n        for (let i=0; i < steckImages.length; i++){\r\n          steckImages[i].changeHidth(startWidth + additionFactor - 0.5);\r\n        }\r\n\r\n        lineImages.push(steckImages);\r\n        steckImages = [extraImages];\r\n      };\r\n\r\n      if (i === dataImages.length - 1){\r\n        if (steckImages.length === 1){\r\n          if (steckImages[0].width > fullWidth - 20){\r\n            steckImages[0].changeWidth (fullWidth - 20);\r\n          };\r\n        };\r\n        lineImages.push(steckImages);\r\n      };\r\n    };\r\n\r\n    return lineImages   \r\n  };\r\n\r\n  //---------------------------------------------------------------------------\r\n  //  Загруска начальных изображений. \r\n\r\n  const requstImageURL = 'https://don16obqbay2c.cloudfront.net/frontend-test-task/gallery-images.json';\r\n  const initionImages = JSONImagesPars(requstJSON(requstImageURL)['galleryImages']);\r\n  useEffect(() => parsNewImages(initionImages), []);\r\n  \r\n\r\n  //  Раздел с хуками и работой с Dom\r\n  const [countReaction, setCountReaction] = useState(0);\r\n  const [countLine, setCountLine] = useState([]);\r\n  const [countWidth, setCountWidth] = useState(0);\r\n\r\n  function buildingImagesTile(arrMyImages, cWidth) {\r\n    setCountLine(lineConstructor(arrMyImages, cWidth).map((i) => \r\n    <Line\r\n      line={i}\r\n      deleteImages={deleteImages}\r\n      key={getRandomInt()}\r\n      getRandomInt={getRandomInt}\r\n     />))\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCountWidth(document.getElementById('photoBoard').clientWidth);\r\n    buildingImagesTile(count, countWidth);\r\n  }, [countWidth]);\r\n\r\n  function handleResize(){\r\n    setCountWidth(document.getElementById('photoBoard').clientWidth);\r\n  };\r\n\r\n  window.addEventListener('resize', handleResize);\r\n  //--------------------------------------------------------------------------- \r\n    // Удаляет элемент по индексу.\r\n\r\n  function deleteImages(idDelete){\r\n    let countCopyDelete = count;\r\n    for (let i=0; i < countCopyDelete.length; i++){\r\n      if (countCopyDelete[i].id === idDelete){\r\n        countCopyDelete.splice(i, 1);\r\n        setCount(countCopyDelete);\r\n        buildingImagesTile(count, countWidth);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // -------------------------------------------------------------------------- \r\n  //  Добавляет новый элемент взависимости от optionAdd.\r\n  // При значении 1 добавляет по ссылке на картинку.\r\n  // При значении 2 добавляет из JSON как по ссылке в README.\r\n\r\n  function addNewImages(urlNewImages, optionAdd){\r\n    console.log(urlNewImages);\r\n    console.log(optionAdd);\r\n    console.log('load');\r\n    if (optionAdd == 1){\r\n      console.log('1');\r\n      parsNewImages([urlNewImages]);\r\n    }else if (optionAdd == 2){\r\n      console.log('2');\r\n      try {\r\n        const newArrUrl = requstJSON(urlNewImages);\r\n      const newArrImages = JSONImagesPars(newArrUrl['galleryImages']);\r\n      parsNewImages(newArrImages);\r\n      } catch {\r\n        alert('Возникла ошибка при загрузки JSON файла, убедитесь что ссылка работает');\r\n      };\r\n      \r\n    };\r\n\r\n    document.getElementById('inputURL').value = '';\r\n  };\r\n\r\n  console.log(count);\r\n\r\n  // --------------------------------------------------------------------------\r\n  // Модальное окно.\r\n\r\n  const [countModal, setCountModal] = useState('');\r\n  const [countIdImage, setCountIdImage] = useState();\r\n\r\n  // Откывает модальное окно с изображением.\r\n  function openImage(urlImageOpen, idImage){\r\n    setCountModal(urlImageOpen);\r\n    setCountIdImage(idImage);\r\n    document.getElementById('modalWindow').style.display = 'block'\r\n  };\r\n\r\n  // Меняет изображение в модальном окне.\r\n  function changeModalImg(newModalImg){\r\n    setCountModal(newModalImg);\r\n  };\r\n\r\n  // --------------------------------------------------------------------------\r\n\r\n  return (\r\n  <Context.Provider value={\r\n    openImage\r\n  }>\r\n    <Head\r\n      addNewImages={addNewImages}\r\n    />\r\n    <div className='main' id='main'>\r\n      <PhotoBoard \r\n        countLine = {countLine}\r\n        parsNewImages = {parsNewImages}\r\n        addNewImages = {addNewImages}\r\n      />\r\n    </div>\r\n    <ModalWindow \r\n      src={countModal} \r\n      setCountModal={setCountModal}\r\n      deleteImages={deleteImages} \r\n      idImage={countIdImage}\r\n      changeModalImg={changeModalImg}\r\n      />\r\n  </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}